$(document).ready(function(){    showModal();    hideModal();    $('.reset').click(function(){        newGame();    });    $('.card').click(function () {        flip(this);    });});function flipSound() {    var audioElement = $('<audio>');    audioElement.attr('src', 'audio/flipcard.wav');    audioElement.attr('autoplay', 'autoplay');    $('.card').click(function(){        audioElement.Play();    });}//show modal functionfunction showModal(){    setTimeout(function(){        $('#modalIntro').css('display', 'block');    }, 10500);}//hide modal functionfunction hideModal(){    $('#modalIntro .btn').click(function(){       $('#modalIntro').hide();    });}//dynamic script creation for youtube api/*var $newtag = $('<script>', {    src: "https://www.youtube.com/iframe_api" ,});$('script').before($newtag);function onYouTubeIframeAPIReady() {    player = new YT.Player('introVid', {        height: '100%',        width: '100%',        videoId: 'mQF1tHf6IOE',        playerVars: {'controls': 0, 'rel': 0},        events: {            'onReady': onPlayerReady,            'onStateChange': onPlayerStateChange,        }    });}function onPlayerReady(event) {    event.target.playVideo();}var done;function onPlayerStateChange(event) {    // check if video ended and remove player    if (event.data == YT.PlayerState.ENDED) {        console.log($('#introVid').remove());        done = true;    }}*/var timer;var count = 0;var totalMatches = 0;var card1 = null;var card2 = null;var src1 = null;var src2 = null;var totalMatch = 0;var accuracy;var tries = 0;var newAccuracy;var roundVal;var response = null;var charCode;var addpoints = 0;//flip functionfunction flip(target_element) {    if(timer){        return;//break out of function if true;    }    if (count < 2) {// if less than two cards are flipped        if (count > 0){ //if there's 1 or more cards flipped            card2 = target_element;            if(card1!==card2){//if second click is not same card as first                $(card2).addClass('clicked'); //flip second                src2 = $(card2).find('img:first').attr('src');                count+=1;                //console.log(card1, src1, count);                tries += 1; //we now have another try                //console.log('tries:'+ tries);                if(src1===src2){//if match                    var curFunding = addpoints + 33333; // add points to your variable                    console.log('newFunding : ' + curFunding + ' ' + typeof curFunding);                    var stat = commas(curFunding); // use that variable of the score and use the funciton to add commas                    $('#funding').next().find('span').text(stat);// put the stat on the board with comma currancy format                    addpoints += 33333;  //add new score to to your variable, so the points will be added to this score next tiem                    card1 = null;// cards go back to null                    card2 = null;                    src1 = null;                    src2 = null;                    totalMatch += 1;                    //console.log('Matches:'+totalMatch);                    accuracy = (totalMatch/tries)*100;                    newAccuracy = accuracy.toFixed(0);                    //console.log('accuracy:'+accuracy);                    $('#accuracy').next().find('span').text(newAccuracy);                    if(totalMatch === 9){//if all cards are match                        response = confirm('Ready for the next venture round?');                        if(response){                            roundVal = $('#round').next().text(); //grabs string value                            charCode = roundVal.charCodeAt();//charCode is the number associated with letter                            nextRoundVal = String.fromCharCode(charCode+1);                            $('#round').next().text(nextRoundVal);//change round value                            $('.clicked').removeClass('clicked');//flip cards back over.                        //    make accuracy go back down to 0                            $('#accuracy').next().find('span').text(0)                        }                    }                }else{//if not a match                    timer = true;                    setTimeout(function(){                        $(card1).removeClass('clicked');                        $(card2).removeClass('clicked');                        timer = false;// if the timer at the beginning of the function is still true.. exit the function                    }, 800);                    accuracy = (totalMatch/tries)*100;                    newAccuracy = accuracy.toFixed(0);                    $('#accuracy').next().find('span').text(newAccuracy);                    console.log('Matches:'+totalMatch);                    console.log('accuracy:'+accuracy);                }                count = 0;            }        }else{ //count is not greater than 0, no cards are flipped            $(target_element).addClass('clicked');            card1 = target_element;            src1 = $(card1).find('img:first').attr('src');            count += 1;            //console.log(card1, src1, count);        }    }else{    }}//function for putting commas in the right spot:function commas(num){    var string = num.toString();    console.log(typeof string + '' + string);    var arr = string.split('');    var count = 0;    var newArray = [];    var finalString = null;    newArray.unshift(arr[arr.length-1]);    count += 1;    for(var x = arr.length-2; x>=0; x--){        if(count%3===0){            newArray.unshift(arr[x] + ',');            count+=1;        }else{            newArray.unshift(arr[x]);            count+=1;        }    }    finalString = newArray.join('');    return finalString;}//function for a new game, randomize cards,function newGame() {    $('.clicked').removeClass('.clicked');    var $randGameboard = shuffle(srcArray); //make a new array of randomized src attributes    for (var i = 0; i < $randGameboard.length; i++){        var curSrc = $randGameboard[i]; //store the current index value of random array in a variable        //$imgArray is a jquery object that references an html node list.. when you index this.. it'll pul the value... make that value a jquery object        $($imgArray[i]).attr('src', curSrc);//make the index value a jquery object and change it's attr value to the random src index i    }}//array of images (back);var $imgArray = $('.back');//array of images(the function below makes this into the source array;var srcArray = [];//for each index value in the array of images ('.back'), push the attr 'src' into a new array. ^^$imgArray.each(function(){    srcArray.push($(this).attr('src'));});//shuffle functionfunction shuffle(array){    var i = array.length;    var rand;    var temp;    while(--i>0){        rand = Math.floor(Math.random()*(i+1));        temp = array[i];array[i] = array[rand];array[rand] = temp;    }    return array;}//shuffle the game board below..